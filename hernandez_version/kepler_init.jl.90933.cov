        - include("kepler.jl")
        - 
        - function kepler_init(time,mass,elements)
        - # Takes orbital elements of a single Keplerian; returns positions & velocities.
        - # Right now this is plane-parallel (2D), so only 4 orbital elements specified
        - # (although the code returns three dimensions:  motion is in X-Z plane).
        - # Elements are given by: period, t0, e*cos(omega), e*sin(omega)
       28 period = elements[1]
        - # Compute the semi-major axis in AU (or other units specified by GNEWT):
       28 semi = (GNEWT*mass*period^2/4/pi^2)^third
        - # Convert to eccentricity & longitude of periastron:
       28 ecc=sqrt(elements[3]^2+elements[4]^2)
       28 omega = atan2(elements[4],elements[3])
        - # The true anomaly at the time of transit:
       28 f1 = 1.5*pi-omega
        - # Compute the time of periastron passage:
       28 sqrt1mecc2 = sqrt(1.0-ecc^2)
       28 tp=(elements[2]+period*sqrt1mecc2/2.0/pi*(ecc*sin(f1)/(1.0+ecc*cos(f1))
        -     -2.0/sqrt1mecc2*atan2(sqrt1mecc2*tan(0.5*f1),1.0+ecc)))
        - # Compute the mean anomaly
       28 n = 2pi/period
       28 m=n*(time-tp)
        - # Kepler solver:
       28 f=kepler(m,ecc)
       28 ecosfp1 = 1.0+ecc*cos(f)
       28 fdot = n*ecosfp1^2/sqrt1mecc2^3
        - # Compute the radial distance:
       28 r=semi*(1.0-ecc^2)/ecosfp1
       28 rdot = semi*n/sqrt1mecc2*ecc*sin(f)
        - # For now assume plane-parallel:
       28 inc = pi/2
       28 capomega = pi
        - # Now, compute the positions
       28 x = zeros(Float64,3)
       28 v = zeros(Float64,3)
        - #coscapomega = cos(capomega) & sincapomega = sin(capomega)
       56 coscapomega = -1.0 ; sincapomega = 0.0
       56 cosomegapf = cos(omega+f) ; sinomegapf = sin(omega+f) 
        - #cosinc = cos(inc) ; sininc = sin(inc)
       56 cosinc = 0.0 ; sininc = 1.0
       28 x[1]=r*(coscapomega*cosomegapf-sincapomega*sinomegapf*cosinc)
       28 x[2]=r*(sincapomega*cosomegapf+coscapomega*sinomegapf*cosinc)
       28 x[3]=r*sinomegapf*sininc
       28 rdotonr = rdot/r
        - # Compute the velocities:
       28 rfdot = r*fdot
       28 v[1]=x[1]*rdotonr+rfdot*(-coscapomega*sinomegapf-sincapomega*cosomegapf*cosinc)
       28 v[2]=x[2]*rdotonr+rfdot*(-sincapomega*sinomegapf+coscapomega*cosomegapf*cosinc)
       28 v[3]=x[3]*rdotonr+rfdot*cosomegapf*sininc
       28 return x,v
        - end
        - 
