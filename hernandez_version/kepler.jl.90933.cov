        - function ekepler(m,ecc)
       28 eps=1e-12
        - #real*8 e,e0,eps,m,ms,pi2,f0,f1,f2,f3,d1,d2,d3
        - # This routine solves Kepler's equation for E as a function of (e,M)
        - # using the procedure outlined in Murray & Dermott:
       28 pi2=2.0*pi
       28 ms=mod(m,pi2)
       28 d3=1e10
       28 e0=ms+ecc*0.85*sin(ms)/abs(sin(ms))
       28 while abs(d3) > eps
       64   f3=ecc*cos(e0)
       64   f2=ecc*sin(e0)
       64   f1=1.0-f3
       64   f0=e0-ms-f2
       64   d1=-f0/f1
       64   d2=-f0/(f1+0.5*d1*f2)
       64   d3=-f0/(f1+d2*0.5*(f2+d2*f3/3.))
       64   e0=e0+d3
        - end
       28 ekep=e0+m-ms
       28 return ekep
        - end
        - 
        - function kepler(m,ecc)
       28 @assert(ecc >= 0.0)
       28 @assert(ecc <= 1.0)
       28 f=m
       28 if ecc > 0
       28   ekep=ekepler(m,ecc)
        - #  println(m-ekep+ecc*sin(ekep))
       28   f=2.0*atan(sqrt((1.0+ecc)/(1.0-ecc))*tan(0.5*ekep))
        - end
       28 return f
        - end
        - 
